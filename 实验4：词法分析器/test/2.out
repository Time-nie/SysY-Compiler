	INT	int	2
	IDENTIFIER	f	2	0x558883441410
	LPAREN	(	2
	RPAREN	)	2
	LBRACE	{	2
	INT	int	3
	IDENTIFIER	a	3	0x558883441920
	SEMICOLON	;	3
	IDENTIFIER	a	4	0x558883441920
	ASSIGN	=	4
	NUMBER	0	4
	SEMICOLON	;	4
	WHILE	while	5
	LPAREN	(	5
	IDENTIFIER	a	5	0x558883441920
	LESS	<	5
	NUMBER	10	5
	RPAREN	)	5
	LBRACE	{	5
	IDENTIFIER	a	6	0x558883441920
	ASSIGN	=	6
	IDENTIFIER	a	6	0x558883441920
	MUL	*	6
	NUMBER	2345	6
	SEMICOLON	;	6
	RBRACE	}	7
	RETURN	return	8
	IDENTIFIER	a	8	0x558883441920
	SEMICOLON	;	8
	RBRACE	}	9
	INT	int	11
	IDENTIFIER	main	11	0x558883441a50
	LPAREN	(	11
	RPAREN	)	11
	LBRACE	{	11
	INT	int	12
	IDENTIFIER	_testid	12	0x558883441af0
	SEMICOLON	;	12
	IDENTIFIER	_testid	13	0x558883441af0
	ASSIGN	=	13
	NUMBER	0	13
	SEMICOLON	;	13
	IF	if	14
	LPAREN	(	14
	IDENTIFIER	_testid	14	0x558883441af0
	EQUAL	==	14
	NUMBER	0	14
	RPAREN	)	14
	LBRACE	{	14
	INT	int	15
	IDENTIFIER	_testid1	15	0x558883441bd0
	SEMICOLON	;	15
	INT	int	16
	IDENTIFIER	_testid2	16	0x558883441c80
	SEMICOLON	;	16
	IDENTIFIER	_testid1	17	0x558883441bd0
	ASSIGN	=	17
	IDENTIFIER	_testid1	17	0x558883441bd0
	ADD	+	17
	NUMBER	1	17
	SEMICOLON	;	17
	RBRACE	}	18
	LBRACE	{	22
	INT	int	23
	IDENTIFIER	a	23	0x558883441d60
	SEMICOLON	;	23
	RBRACE	}	24
	LBRACE	{	25
	INT	int	26
	IDENTIFIER	a	26	0x558883441e00
	SEMICOLON	;	26
	RBRACE	}	27
	INT	int	28
	IDENTIFIER	b	28	0x558883441e50
	SEMICOLON	;	28
	RETURN	return	29
	NUMBER	0	29
	SEMICOLON	;	29
	RBRACE	}	30
