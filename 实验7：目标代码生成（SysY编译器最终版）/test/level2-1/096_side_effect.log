install成功install成功install成功install成功install成功install成功install成功install成功install成功install成功install成功install成功install成功install成功过了yyparse
完成语法树输出
Ast::genCode
SeqNode::genCode
SeqNode::genCode
DeclStmt::genCode
UnaryExpr::genCode
ConstantSymbolEntry
TemporarySymbolEntry
DeclStmt::genCode
ConstantSymbolEntry
FunctionDef::genCode
CompoundStmt::genCode
SeqNode::genCode
SeqNode::genCode
SeqNode::genCode
DeclStmt::genCode
44444444444444444se->isLocal() || se->isParam()
44444444444444444expr != nullptr
444444444444444444else
Id::genCode
LoadInstruction
dst: %t4,src_addr :@a
AssignStmt::genCode
BinaryExpr::genCode
Id::genCode
LoadInstruction
dst: %t7,src_addr :%t43
AssignStmt::genCode
Id::genCode
LoadInstruction
dst: %t10,src_addr :%t43
ReturnStmt::genCode
Id::genCode
LoadInstruction
dst: %t11,src_addr :@a
FunctionDef::genCode
CompoundStmt::genCode
SeqNode::genCode
SeqNode::genCode
SeqNode::genCode
SeqNode::genCode
SeqNode::genCode
SeqNode::genCode
DeclStmt::genCode
44444444444444444se->isLocal() || se->isParam()
44444444444444444expr != nullptr
444444444444444444else
WhileStmt::genCode
BinaryExpr::genCode
Id::genCode
LoadInstruction
dst: %t13,src_addr :%t45
CompoundStmt::genCode
SeqNode::genCode
SeqNode::genCode
IfStmt::genCode
BinaryExpr::genCode
BinaryExpr::genCode
FuncCallExpr::genCode
FuncCallExpr::genCode
FuncCallExpr::genCode
CompoundStmt::genCode
SeqNode::genCode
SeqNode::genCode
SeqNode::genCode
FuncCallExpr::genCode
Id::genCode
LoadInstruction
dst: %t20,src_addr :@a
FuncCallExpr::genCode
FuncCallExpr::genCode
Id::genCode
LoadInstruction
dst: %t21,src_addr :@b
FuncCallExpr::genCode
IfElseStmt::genCode
BinaryExpr::genCode
BinaryExpr::genCode
FuncCallExpr::genCode
BinaryExpr::genCode
FuncCallExpr::genCode
BinaryExpr::genCode
BinaryExpr::genCode
FuncCallExpr::genCode
FuncCallExpr::genCode
CompoundStmt::genCode
SeqNode::genCode
SeqNode::genCode
FuncCallExpr::genCode
Id::genCode
LoadInstruction
dst: %t31,src_addr :@a
FuncCallExpr::genCode
AssignStmt::genCode
BinaryExpr::genCode
Id::genCode
LoadInstruction
dst: %t33,src_addr :@b
CompoundStmt::genCode
FuncCallExpr::genCode
AssignStmt::genCode
BinaryExpr::genCode
Id::genCode
LoadInstruction
dst: %t37,src_addr :%t45
FuncCallExpr::genCode
Id::genCode
LoadInstruction
dst: %t39,src_addr :@a
FuncCallExpr::genCode
FuncCallExpr::genCode
Id::genCode
LoadInstruction
dst: %t40,src_addr :@b
FuncCallExpr::genCode
ReturnStmt::genCode
Id::genCode
LoadInstruction
dst: %t41,src_addr :@a
完成中间代码生成
Unit::genMachineCode
BasicBlock::genMachineCode
GlobalInstruction::genMachineCode
插入
ConstantSymbolEntry
GlobalInstruction::genMachineCode-out
GlobalInstruction::genMachineCode
插入
ConstantSymbolEntry
GlobalInstruction::genMachineCode-out
Function::genMachineCode
BasicBlock::genMachineCode
AllocaInstruction::genMachineCode
1234567891012345678@b: 4: 32
1234567891012345678@b: 4: 4offset
AllocaInstruction::genMachineCode-out
LoadInstruction::genMachineCode
SSSSSSSSSSSSSSSSSSSSSSSSSSSoperands[1]->getEntry()->isVariable() && dynamic_cast<IdentifierSymbolEntry *>(operands[1]->getEntry())->isGlobal()
LoadInstruction::genMachineCode,isGlobal
LoadInstruction::genMachineCode-out
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode-out
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode,isTemporary
-4LoadInstruction::genMachineCode-out
BinaryInstruction::genMachineCode
ConstantSymbolEntry
BinaryInstruction::genMachineCode-out
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode-out
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode,isTemporary
-4LoadInstruction::genMachineCode-out
StoreInstruction::genMachineCode
SSSSSSSSSSSSSSSSSSSStoreInstruction::gloabe
StoreInstruction::genMachineCode-out
LoadInstruction::genMachineCode
SSSSSSSSSSSSSSSSSSSSSSSSSSSoperands[1]->getEntry()->isVariable() && dynamic_cast<IdentifierSymbolEntry *>(operands[1]->getEntry())->isGlobal()
LoadInstruction::genMachineCode,isGlobal
LoadInstruction::genMachineCode-out
RetInstruction::genMachineCode
RetInstruction::genMachineCode-out
Function::genMachineCode
BasicBlock::genMachineCode
AllocaInstruction::genMachineCode
1234567891012345678@k: 4: 32
1234567891012345678@k: 4: 4offset
AllocaInstruction::genMachineCode-out
StoreInstruction::genMachineCode
ConstantSymbolEntry
StoreInstruction::genMachineCode-out
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode-out
BasicBlock::genMachineCode
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode,isTemporary
-4LoadInstruction::genMachineCode-out
CmpInstruction::genMachineCode
ConstantSymbolEntry
CmpInstruction::genMachineCode-out
CondBrInstruction::genMachineCode
CondBrInstruction::genMachineCode-out
BasicBlock::genMachineCode
CallInstruction::genMachineCode
CallInstruction::genMachineCode-out
CmpInstruction::genMachineCode
ConstantSymbolEntry
CmpInstruction::genMachineCode-out
CondBrInstruction::genMachineCode
CondBrInstruction::genMachineCode-out
BasicBlock::genMachineCode
LoadInstruction::genMachineCode
SSSSSSSSSSSSSSSSSSSSSSSSSSSoperands[1]->getEntry()->isVariable() && dynamic_cast<IdentifierSymbolEntry *>(operands[1]->getEntry())->isGlobal()
LoadInstruction::genMachineCode,isGlobal
LoadInstruction::genMachineCode-out
CallInstruction::genMachineCode
CallInstruction::genMachineCode-out
CallInstruction::genMachineCode
ConstantSymbolEntry
CallInstruction::genMachineCode-out
LoadInstruction::genMachineCode
SSSSSSSSSSSSSSSSSSSSSSSSSSSoperands[1]->getEntry()->isVariable() && dynamic_cast<IdentifierSymbolEntry *>(operands[1]->getEntry())->isGlobal()
LoadInstruction::genMachineCode,isGlobal
LoadInstruction::genMachineCode-out
CallInstruction::genMachineCode
CallInstruction::genMachineCode-out
CallInstruction::genMachineCode
ConstantSymbolEntry
CallInstruction::genMachineCode-out
LoadInstruction::genMachineCode
SSSSSSSSSSSSSSSSSSSSSSSSSSSoperands[1]->getEntry()->isVariable() && dynamic_cast<IdentifierSymbolEntry *>(operands[1]->getEntry())->isGlobal()
LoadInstruction::genMachineCode,isGlobal
LoadInstruction::genMachineCode-out
RetInstruction::genMachineCode
RetInstruction::genMachineCode-out
BasicBlock::genMachineCode
LoadInstruction::genMachineCode
SSSSSSSSSSSSSSSSSSSSSSSSSSSoperands[1]->getEntry()->isVariable() && dynamic_cast<IdentifierSymbolEntry *>(operands[1]->getEntry())->isGlobal()
LoadInstruction::genMachineCode,isGlobal
LoadInstruction::genMachineCode-out
CallInstruction::genMachineCode
CallInstruction::genMachineCode-out
CallInstruction::genMachineCode
ConstantSymbolEntry
CallInstruction::genMachineCode-out
LoadInstruction::genMachineCode
SSSSSSSSSSSSSSSSSSSSSSSSSSSoperands[1]->getEntry()->isVariable() && dynamic_cast<IdentifierSymbolEntry *>(operands[1]->getEntry())->isGlobal()
LoadInstruction::genMachineCode,isGlobal
LoadInstruction::genMachineCode-out
CallInstruction::genMachineCode
CallInstruction::genMachineCode-out
CallInstruction::genMachineCode
ConstantSymbolEntry
CallInstruction::genMachineCode-out
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode-out
BasicBlock::genMachineCode
CallInstruction::genMachineCode
CallInstruction::genMachineCode-out
CmpInstruction::genMachineCode
ConstantSymbolEntry
CmpInstruction::genMachineCode-out
CmpInstruction::genMachineCode
ConstantSymbolEntry
CmpInstruction::genMachineCode-out
CondBrInstruction::genMachineCode
CondBrInstruction::genMachineCode-out
BasicBlock::genMachineCode
CallInstruction::genMachineCode
CallInstruction::genMachineCode-out
CmpInstruction::genMachineCode
ConstantSymbolEntry
CmpInstruction::genMachineCode-out
CondBrInstruction::genMachineCode
CondBrInstruction::genMachineCode-out
BasicBlock::genMachineCode
CallInstruction::genMachineCode
CallInstruction::genMachineCode-out
CmpInstruction::genMachineCode
ConstantSymbolEntry
CmpInstruction::genMachineCode-out
CondBrInstruction::genMachineCode
CondBrInstruction::genMachineCode-out
BasicBlock::genMachineCode
LoadInstruction::genMachineCode
SSSSSSSSSSSSSSSSSSSSSSSSSSSoperands[1]->getEntry()->isVariable() && dynamic_cast<IdentifierSymbolEntry *>(operands[1]->getEntry())->isGlobal()
LoadInstruction::genMachineCode,isGlobal
LoadInstruction::genMachineCode-out
CallInstruction::genMachineCode
CallInstruction::genMachineCode-out
CallInstruction::genMachineCode
ConstantSymbolEntry
CallInstruction::genMachineCode-out
LoadInstruction::genMachineCode
SSSSSSSSSSSSSSSSSSSSSSSSSSSoperands[1]->getEntry()->isVariable() && dynamic_cast<IdentifierSymbolEntry *>(operands[1]->getEntry())->isGlobal()
LoadInstruction::genMachineCode,isGlobal
LoadInstruction::genMachineCode-out
BinaryInstruction::genMachineCode
ConstantSymbolEntry
BinaryInstruction::genMachineCode-out
StoreInstruction::genMachineCode
SSSSSSSSSSSSSSSSSSSStoreInstruction::gloabe
StoreInstruction::genMachineCode-out
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode-out
BasicBlock::genMachineCode
CallInstruction::genMachineCode
CallInstruction::genMachineCode-out
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode-out
BasicBlock::genMachineCode
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode,isTemporary
-4LoadInstruction::genMachineCode-out
BinaryInstruction::genMachineCode
ConstantSymbolEntry
BinaryInstruction::genMachineCode-out
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode-out
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode-out
BasicBlock::genMachineCode
CallInstruction::genMachineCode
CallInstruction::genMachineCode-out
CmpInstruction::genMachineCode
ConstantSymbolEntry
CmpInstruction::genMachineCode-out
CondBrInstruction::genMachineCode
CondBrInstruction::genMachineCode-out
BasicBlock::genMachineCode
CallInstruction::genMachineCode
CallInstruction::genMachineCode-out
CallInstruction::genMachineCode
CallInstruction::genMachineCode-out
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode-out
BinaryInstruction::genMachineCode
ConstantSymbolEntry
BinaryInstruction::genMachineCode-out
CmpInstruction::genMachineCode
ConstantSymbolEntry
CmpInstruction::genMachineCode-out
CondBrInstruction::genMachineCode
CondBrInstruction::genMachineCode-out
完成目标代码生成
完成初始化linearScan
LinearScan::allocateRegisters()
auto &f : unit->getFuncs(),f:@inc_a
computeLiveIntervals in
computeLiveIntervals out
linearScanRegisterAllocation
success 
modifyCode
auto &f : unit->getFuncs(),f:@main
computeLiveIntervals in
computeLiveIntervals out
linearScanRegisterAllocation
success 
modifyCode
完成寄存器分配
MachineUnit:output 
com to PrintGlobalDecl 
进入1
进入2
进来了
进入2
进来了
out from PrintGlobalDecl
MachineFunction:output ,inc_a
StackMInstrcuton::output
MovMInstruction::output
BinaryMInstruction::output
MachineBlock::output, .L42:
LoadMInstruction::output
LoadMInstruction::output
StoreMInstruction::output
LoadMInstruction::output
LoadMInstruction::output
MovMInstruction::output
BinaryMInstruction::output
StoreMInstruction::output
LoadMInstruction::output
LoadMInstruction::output
StoreMInstruction::output
LoadMInstruction::output
LoadMInstruction::output
MovMInstruction::output
BinaryMInstruction::output
StackMInstrcuton::output
BranchMInstruction::output
MachineFunction:output ,main
StackMInstrcuton::output
MovMInstruction::output
BinaryMInstruction::output
MachineBlock::output, .L44:
LoadMInstruction::output
StoreMInstruction::output
BranchMInstruction::output
MachineBlock::output, .L46:
LoadMInstruction::output
LoadMInstruction::output
CmpMInstruction::output
BranchMInstruction::output
BranchMInstruction::output
MachineBlock::output, .L47:
BranchMInstruction::output
MovMInstruction::output
LoadMInstruction::output
CmpMInstruction::output
BranchMInstruction::output
BranchMInstruction::output
MachineBlock::output, .L48:
LoadMInstruction::output
LoadMInstruction::output
MovMInstruction::output
BranchMInstruction::output
MovMInstruction::output
BranchMInstruction::output
LoadMInstruction::output
LoadMInstruction::output
MovMInstruction::output
BranchMInstruction::output
MovMInstruction::output
BranchMInstruction::output
LoadMInstruction::output
LoadMInstruction::output
MovMInstruction::output
BinaryMInstruction::output
StackMInstrcuton::output
BranchMInstruction::output
MachineBlock::output, .L50:
LoadMInstruction::output
LoadMInstruction::output
MovMInstruction::output
BranchMInstruction::output
MovMInstruction::output
BranchMInstruction::output
LoadMInstruction::output
LoadMInstruction::output
MovMInstruction::output
BranchMInstruction::output
MovMInstruction::output
BranchMInstruction::output
BranchMInstruction::output
MachineBlock::output, .L51:
BranchMInstruction::output
MovMInstruction::output
LoadMInstruction::output
CmpMInstruction::output
MovMInstruction::output
MovMInstruction::output
MovMInstruction::output
LoadMInstruction::output
CmpMInstruction::output
BranchMInstruction::output
BranchMInstruction::output
MachineBlock::output, .L53:
BranchMInstruction::output
MovMInstruction::output
LoadMInstruction::output
CmpMInstruction::output
BranchMInstruction::output
BranchMInstruction::output
MachineBlock::output, .L55:
BranchMInstruction::output
MovMInstruction::output
LoadMInstruction::output
CmpMInstruction::output
BranchMInstruction::output
BranchMInstruction::output
MachineBlock::output, .L57:
LoadMInstruction::output
LoadMInstruction::output
MovMInstruction::output
BranchMInstruction::output
MovMInstruction::output
BranchMInstruction::output
LoadMInstruction::output
LoadMInstruction::output
LoadMInstruction::output
BinaryMInstruction::output
LoadMInstruction::output
StoreMInstruction::output
BranchMInstruction::output
MachineBlock::output, .L58:
BranchMInstruction::output
MovMInstruction::output
BranchMInstruction::output
MachineBlock::output, .L59:
LoadMInstruction::output
BinaryMInstruction::output
BinaryMInstruction::output
BinaryMInstruction::output
StoreMInstruction::output
BranchMInstruction::output
MachineBlock::output, .L63:
BranchMInstruction::output
MovMInstruction::output
LoadMInstruction::output
CmpMInstruction::output
BranchMInstruction::output
BranchMInstruction::output
MachineBlock::output, .L65:
BranchMInstruction::output
MovMInstruction::output
BranchMInstruction::output
MovMInstruction::output
BinaryMInstruction::output
BinaryMInstruction::output
BinaryMInstruction::output
LoadMInstruction::output
MovMInstruction::output
BinaryMInstruction::output
LoadMInstruction::output
CmpMInstruction::output
BranchMInstruction::output
BranchMInstruction::output
GlobalMInstruction::output
GlobalMInstruction::output
完成目标代码输出
TOTAL: 0H-0M-0S-0us
