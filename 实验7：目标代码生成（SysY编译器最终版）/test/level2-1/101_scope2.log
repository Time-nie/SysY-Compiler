install成功install成功install成功install成功install成功install成功install成功install成功install成功install成功install成功install成功install成功install成功过了yyparse
完成语法树输出
Ast::genCode
SeqNode::genCode
DeclStmt::genCode
DeclStmt::genCode_expr = nullptrFunctionDef::genCode
CompoundStmt::genCode
SeqNode::genCode
SeqNode::genCode
AssignStmt::genCode
IfStmt::genCode
BinaryExpr::genCode
Id::genCode
LoadInstruction
dst: %t3,src_addr :@k
CompoundStmt::genCode
SeqNode::genCode
SeqNode::genCode
SeqNode::genCode
AssignStmt::genCode
BinaryExpr::genCode
Id::genCode
LoadInstruction
dst: %t6,src_addr :@k
DeclStmt::genCode
44444444444444444se->isLocal() || se->isParam()
44444444444444444expr != nullptr
444444444444444444else
WhileStmt::genCode
BinaryExpr::genCode
Id::genCode
LoadInstruction
dst: %t9,src_addr :%t36
CompoundStmt::genCode
SeqNode::genCode
AssignStmt::genCode
BinaryExpr::genCode
Id::genCode
LoadInstruction
dst: %t12,src_addr :%t36
IfStmt::genCode
BinaryExpr::genCode
Id::genCode
LoadInstruction
dst: %t14,src_addr :%t36
CompoundStmt::genCode
SeqNode::genCode
DeclStmt::genCode
44444444444444444se->isLocal() || se->isParam()
44444444444444444expr != nullptr
444444444444444444else
CompoundStmt::genCode
SeqNode::genCode
DeclStmt::genCode
44444444444444444se->isLocal() || se->isParam()
44444444444444444expr != nullptr
444444444444444444else
CompoundStmt::genCode
SeqNode::genCode
SeqNode::genCode
SeqNode::genCode
AssignStmt::genCode
AssignStmt::genCode
BinaryExpr::genCode
Id::genCode
LoadInstruction
dst: %t20,src_addr :%t36
Id::genCode
LoadInstruction
dst: %t21,src_addr :%t44
DeclStmt::genCode
44444444444444444se->isLocal() || se->isParam()
44444444444444444expr != nullptr
444444444444444444else
AssignStmt::genCode
BinaryExpr::genCode
BinaryExpr::genCode
Id::genCode
LoadInstruction
dst: %t25,src_addr :%t36
Id::genCode
LoadInstruction
dst: %t26,src_addr :%t46
Id::genCode
LoadInstruction
dst: %t28,src_addr :%t45
FuncCallExpr::genCode
Id::genCode
LoadInstruction
dst: %t30,src_addr :%t36
ReturnStmt::genCode
Id::genCode
LoadInstruction
dst: %t31,src_addr :@k
完成中间代码生成
Unit::genMachineCode
BasicBlock::genMachineCode
GlobalInstruction::genMachineCode
插入
ConstantSymbolEntry
GlobalInstruction::genMachineCode-out
Function::genMachineCode
BasicBlock::genMachineCode
AllocaInstruction::genMachineCode
1234567891012345678@g: 4: 32
1234567891012345678@g: 4: 4offset
AllocaInstruction::genMachineCode-out
AllocaInstruction::genMachineCode
1234567891012345678@l: 4: 32
1234567891012345678@l: 4: 8offset
AllocaInstruction::genMachineCode-out
AllocaInstruction::genMachineCode
1234567891012345678@g: 4: 32
1234567891012345678@g: 4: 12offset
AllocaInstruction::genMachineCode-out
AllocaInstruction::genMachineCode
1234567891012345678@k: 4: 32
1234567891012345678@k: 4: 16offset
AllocaInstruction::genMachineCode-out
StoreInstruction::genMachineCode
SSSSSSSSSSSSSSSSSSSStoreInstruction::gloabe
ConstantSymbolEntry
StoreInstruction::genMachineCode-out
LoadInstruction::genMachineCode
SSSSSSSSSSSSSSSSSSSSSSSSSSSoperands[1]->getEntry()->isVariable() && dynamic_cast<IdentifierSymbolEntry *>(operands[1]->getEntry())->isGlobal()
LoadInstruction::genMachineCode,isGlobal
LoadInstruction::genMachineCode-out
CmpInstruction::genMachineCode
ConstantSymbolEntry
CmpInstruction::genMachineCode-out
CondBrInstruction::genMachineCode
CondBrInstruction::genMachineCode-out
BasicBlock::genMachineCode
LoadInstruction::genMachineCode
SSSSSSSSSSSSSSSSSSSSSSSSSSSoperands[1]->getEntry()->isVariable() && dynamic_cast<IdentifierSymbolEntry *>(operands[1]->getEntry())->isGlobal()
LoadInstruction::genMachineCode,isGlobal
LoadInstruction::genMachineCode-out
BinaryInstruction::genMachineCode
ConstantSymbolEntry
BinaryInstruction::genMachineCode-out
StoreInstruction::genMachineCode
SSSSSSSSSSSSSSSSSSSStoreInstruction::gloabe
StoreInstruction::genMachineCode-out
StoreInstruction::genMachineCode
ConstantSymbolEntry
StoreInstruction::genMachineCode-out
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode-out
BasicBlock::genMachineCode
LoadInstruction::genMachineCode
SSSSSSSSSSSSSSSSSSSSSSSSSSSoperands[1]->getEntry()->isVariable() && dynamic_cast<IdentifierSymbolEntry *>(operands[1]->getEntry())->isGlobal()
LoadInstruction::genMachineCode,isGlobal
LoadInstruction::genMachineCode-out
RetInstruction::genMachineCode
RetInstruction::genMachineCode-out
BasicBlock::genMachineCode
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode,isTemporary
-16LoadInstruction::genMachineCode-out
CmpInstruction::genMachineCode
ConstantSymbolEntry
CmpInstruction::genMachineCode-out
CondBrInstruction::genMachineCode
CondBrInstruction::genMachineCode-out
BasicBlock::genMachineCode
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode,isTemporary
-16LoadInstruction::genMachineCode-out
BinaryInstruction::genMachineCode
ConstantSymbolEntry
BinaryInstruction::genMachineCode-out
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode-out
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode,isTemporary
-16LoadInstruction::genMachineCode-out
CmpInstruction::genMachineCode
ConstantSymbolEntry
CmpInstruction::genMachineCode-out
CondBrInstruction::genMachineCode
CondBrInstruction::genMachineCode-out
BasicBlock::genMachineCode
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode,isTemporary
-16LoadInstruction::genMachineCode-out
CallInstruction::genMachineCode
CallInstruction::genMachineCode-out
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode-out
BasicBlock::genMachineCode
StoreInstruction::genMachineCode
ConstantSymbolEntry
StoreInstruction::genMachineCode-out
StoreInstruction::genMachineCode
ConstantSymbolEntry
StoreInstruction::genMachineCode-out
StoreInstruction::genMachineCode
ConstantSymbolEntry
StoreInstruction::genMachineCode-out
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode,isTemporary
-16LoadInstruction::genMachineCode-out
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode,isTemporary
-12LoadInstruction::genMachineCode-out
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode-out
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode-out
StoreInstruction::genMachineCode
ConstantSymbolEntry
StoreInstruction::genMachineCode-out
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode,isTemporary
-16LoadInstruction::genMachineCode-out
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode,isTemporary
-4LoadInstruction::genMachineCode-out
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode-out
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode,isTemporary
-8LoadInstruction::genMachineCode-out
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode-out
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode-out
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode-out
BasicBlock::genMachineCode
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode-out
完成目标代码生成
完成初始化linearScan
LinearScan::allocateRegisters()
auto &f : unit->getFuncs(),f:@main
computeLiveIntervals in
computeLiveIntervals out
linearScanRegisterAllocation
success 
modifyCode
完成寄存器分配
MachineUnit:output 
com to PrintGlobalDecl 
进入1
进入2
进来了
out from PrintGlobalDecl
MachineFunction:output ,main
StackMInstrcuton::output
MovMInstruction::output
BinaryMInstruction::output
MachineBlock::output, .L32:
LoadMInstruction::output
LoadMInstruction::output
StoreMInstruction::output
LoadMInstruction::output
LoadMInstruction::output
LoadMInstruction::output
CmpMInstruction::output
BranchMInstruction::output
BranchMInstruction::output
MachineBlock::output, .L33:
LoadMInstruction::output
LoadMInstruction::output
LoadMInstruction::output
MovMInstruction::output
BinaryMInstruction::output
LoadMInstruction::output
StoreMInstruction::output
LoadMInstruction::output
StoreMInstruction::output
BranchMInstruction::output
MachineBlock::output, .L34:
LoadMInstruction::output
LoadMInstruction::output
MovMInstruction::output
BinaryMInstruction::output
StackMInstrcuton::output
BranchMInstruction::output
MachineBlock::output, .L37:
LoadMInstruction::output
LoadMInstruction::output
CmpMInstruction::output
BranchMInstruction::output
BranchMInstruction::output
MachineBlock::output, .L38:
LoadMInstruction::output
BinaryMInstruction::output
BinaryMInstruction::output
BinaryMInstruction::output
StoreMInstruction::output
LoadMInstruction::output
LoadMInstruction::output
CmpMInstruction::output
BranchMInstruction::output
BranchMInstruction::output
MachineBlock::output, .L39:
LoadMInstruction::output
MovMInstruction::output
BranchMInstruction::output
BranchMInstruction::output
MachineBlock::output, .L41:
LoadMInstruction::output
StoreMInstruction::output
LoadMInstruction::output
StoreMInstruction::output
LoadMInstruction::output
StoreMInstruction::output
LoadMInstruction::output
LoadMInstruction::output
BinaryMInstruction::output
BinaryMInstruction::output
BinaryMInstruction::output
StoreMInstruction::output
LoadMInstruction::output
StoreMInstruction::output
LoadMInstruction::output
LoadMInstruction::output
MovMInstruction::output
BinaryMInstruction::output
LoadMInstruction::output
MovMInstruction::output
BinaryMInstruction::output
StoreMInstruction::output
BranchMInstruction::output
MachineBlock::output, .L42:
BranchMInstruction::output
GlobalMInstruction::output
完成目标代码输出
TOTAL: 0H-0M-0S-0us
